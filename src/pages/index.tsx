import Head from "next/head";

import { RouterOutputs, api } from "~/utils/api";
import { SignInButton, useUser } from "@clerk/nextjs";
import React from "react";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user);
  
  if(!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image src={user.imageUrl} alt="Profile image" width={56} height={56} className="w-14 h-14 rounded-full border" />
      <input placeholder="Type some emojis!" className="grow bg-transparent outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
  <div className="p-4 border-b border-slate-400 flex gap-3">
    <Image src={author.imageUrl} alt="User-photo" width={56} height={56} className="w-14 h-14 rounded-full border" />
    <div className="flex flex-col">
      <div className="flex gap-1 text-slate-300">
        <span>{`@${author.username}`}</span>
        <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      <span>{post.content}</span>
    </div>
  </div>
  )
}

export default function Home() {
 
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="border-x border-slate-400 w-full h-full md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton/>
              </div>
            )}
            {!!user.isSignedIn && <CreatePostWizard/>}
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}

